{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-08T18:24:42.572Z",
    "end": "2025-09-08T18:24:42.638Z",
    "duration": 66,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "54913596-d622-4646-9dab-ffb34a991a34",
      "title": "",
      "fullFile": "C:\\Users\\AnaLígiaBragagnolo\\Ana-Pos\\pgats-2025-02-base\\test\\rest\\external\\checkout.test.js",
      "file": "\\test\\rest\\external\\checkout.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b776fc5f-df04-497e-9b01-2c052ad99186",
          "title": "Checkout",
          "fullFile": "C:\\Users\\AnaLígiaBragagnolo\\Ana-Pos\\pgats-2025-02-base\\test\\rest\\external\\checkout.test.js",
          "file": "\\test\\rest\\external\\checkout.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b09d3f2c-abf0-44bb-a668-e50b714d2d2e",
              "title": "POST /login",
              "fullFile": "C:\\Users\\AnaLígiaBragagnolo\\Ana-Pos\\pgats-2025-02-base\\test\\rest\\external\\checkout.test.js",
              "file": "\\test\\rest\\external\\checkout.test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"POST /login\"",
                  "fullTitle": "Checkout POST /login \"before each\" hook in \"POST /login\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaLogin = await request(process.env.BASE_URL_REST)\n    .post('/api/users/login')\n    .send({\n        email: 'ana@gmail.com',\n        password: '123456'\n    });\ntoken = respostaLogin.body.token;",
                  "err": {},
                  "uuid": "49d240b8-e79c-42f3-bb5c-1b4df5061d7b",
                  "parentUUID": "b09d3f2c-abf0-44bb-a668-e50b714d2d2e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Quando informo produto e quantidade o checkout é realizado com sucesso",
                  "fullTitle": "Checkout POST /login Quando informo produto e quantidade o checkout é realizado com sucesso",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resposta = await request(process.env.BASE_URL_REST)\n    .post('/api/checkout')\n    .set('Authorization', `Bearer ${token}`)\n    .send(\n        {items: [\n            {\n            productId: 2,\n            quantity: 1\n            }\n        ],\n        freight: 0,\n        paymentMethod: \"boleto\",\n        cardData: {\n            number: \"string\",\n            name: \"string\",\n            expiry: \"string\",\n            cvv: \"string\"\n        }\n    });\n\nexpect(resposta.status).to.equal(200)",
                  "err": {},
                  "uuid": "ff0c1eda-2b4b-49b5-bdfc-fe63d89af858",
                  "parentUUID": "b09d3f2c-abf0-44bb-a668-e50b714d2d2e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Quando não informo produto recebo erro de produto não encontrado",
                  "fullTitle": "Checkout POST /login Quando não informo produto recebo erro de produto não encontrado",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resposta = await request(process.env.BASE_URL_REST)\n    .post('/api/checkout')\n    .set('Authorization', `Bearer ${token}`)\n    .send(\n        {items: [\n            {\n            productId: 0,\n            quantity: 1\n            }\n        ],\n        freight: 0,\n        paymentMethod: \"boleto\",\n        cardData: {\n            number: \"string\",\n            name: \"string\",\n            expiry: \"string\",\n            cvv: \"string\"\n        }\n    });\n\nexpect(resposta.status).to.equal(400);\nexpect(resposta.body).to.have.property('error', 'Produto não encontrado')",
                  "err": {},
                  "uuid": "e5c3b4ed-3e37-4505-bf8a-161e458ff994",
                  "parentUUID": "b09d3f2c-abf0-44bb-a668-e50b714d2d2e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve retornar erro quando o token não é informado",
                  "fullTitle": "Checkout POST /login Deve retornar erro quando o token não é informado",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resposta = await request(process.env.BASE_URL_REST)\n    .post('/api/checkout')\n    .send(\n        {items: [\n            {\n            productId: 0,\n            quantity: 1\n            }\n        ],\n        freight: 0,\n        paymentMethod: \"boleto\",\n        cardData: {\n            number: \"string\",\n            name: \"string\",\n            expiry: \"string\",\n            cvv: \"string\"\n        }\n    });\nexpect(resposta.status).to.equal(401);\nexpect(resposta.body).to.have.property('error', 'Token inválido')",
                  "err": {},
                  "uuid": "3870e420-e56f-47be-83da-ede764a34edd",
                  "parentUUID": "b09d3f2c-abf0-44bb-a668-e50b714d2d2e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff0c1eda-2b4b-49b5-bdfc-fe63d89af858",
                "e5c3b4ed-3e37-4505-bf8a-161e458ff994",
                "3870e420-e56f-47be-83da-ede764a34edd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}